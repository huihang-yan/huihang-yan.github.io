.TH huihang 7 "2025" "-" "Drafts of Huihang Yan"
.ad b
.ll 60
.hy 0
.\" ====================================================================
.\" .Text anything ...
.\"
.\" All arguments are printed as text.
.\"
.de Text
.  nop \)\\$*
..

.SH NAME

BANNER_HERE

Greetings! I am delighted to welcome you to my home page, a digital space
where I share my thoughts, stories, and passions.

Here, you will discover my blog content, or perhaps it's more accurate
to call it a collection of drafts. These are the works in progress,
the ideas still taking shape on the page.

I am not good at writing, but I am eager to enhance my abilities through
consistent writing and editing.
I will constantly review and revise the content I create,
since I could always discover areas that need improvement
several minutes/hours/days/months/years after my previous edit.

Often, I realise that a different word would better suit a particular context,
offering greater precision or simply being a more fitting choice. There
are times when I identify redundant words that should be removed, or
I spot typos and other errors.

For instance, I have mistakenly typed
'push request' instead of the correct term, 'pull request', and in another
case, I incorrectly used 'it' to refer to the plural 'blogs' - when 'they'
would have been the appropriate pronoun. These examples illustrate that I
frequently make writing errors, which is precisely why I am committed to
this process of continuous refinement.

Therefore, please don't hesitate to share your advice with me.
I am always eager to heard your thoughts and suggestions and learn from you.
You can reach out to me via e-mail at the following address:

	huihang.yan@outlook.com

You can also sending pull requests via GitHub. I would be glad
if my GitHub repo page gets crowded. This page
is hosted on GitHub Pages. Its corresponding GitHub repository
is public, so you can file issues and/or pull requests.

Edit history is kept in the GitHub repository commits.
If you are curious what edits are made, you could
check them out at the repo page.

.SH DRAFT QUALITY

I write blogs mostly for fun and to the hope that they might help
other people in some way - at least they could be used as
English-as-second-language usage corpus for linguistics study.
That is, I do not take this really serious. I need to do other things
to survive in this world. As a result these blog articles might
be of really low quality, before they get edited and/or updated
days/weeks/months/years later after they are published here at the
first place.

In other way, all stuff I put here shall be considered drafts.
Of draft quality, or we could say. But I believe that as time goes
by they would get better and better with edits and/or updates.

I remember a saying that a good work does not come out at once, but
instead comes out with lots of edits. I remember that it is from
Hemingway.
I asked an AI for confirmation, and the AI told me some relevant
Hemingway quotes:

	1. 'The only kind of writing is rewriting.'

	2. 'All first drafts are shit.'

	3. Modify the works, 'removing the bullshit'.

That AI also told me that: 'For example, he spent five months revising
A Farewell to Arms after finishing the first
darft in six months, and even made thirty nine
revisions to the last page.'

I haven't further verify those things suggested by AI but they
sound real and I think I have heard of them before.

Anyway, what I mean is - draft quality. Draft quality.

.SH END OF FRONTMATTER

Here comes the end of the preface stuff.
Thanks for reading.

The following are blog articles - or should
we say, again, drafts. Drafts.

.SH ON BLOGGING
   
I have decided to begin my new blog on GitHub Pages. But why
GitHub Pages? Why not opt for other well-known
blogging platforms instead? And most importantly,
what are the distinct advantages that GitHub Pages offers?

The biggest pros should be the ability to blog on the command-line. GitHub
Pages is *designed* to be used on the command-line, while other blogging
platforms are usually not. Other blogging platforms usually provides
browser interface. Although we might end up being able to blog on
command-line with some scripting or something else, there might be issues,
and why not simply use GitHub Pages?

Another unique feature of GitHub Pages is the version control thing. I
don't really need version control, but it's okay for me. I feel a bit
uneasy for the need of git-commit every time changes are made,
but at the same time I always check what I have edited with git-diff.
This is weird.

Availability is another factor to be considered. Besides GitHub Pages,
I know two other blog platforms, Blogspot and Wordpress. If my memory
is correct, Blogspot is a Google thing, and is thus - like other Google
thing - unavailable in the place I live in. I cannot connect to the
Wordpress website either. GitHub Pages is also unusable from time to time,
but is at least available *some times*, and the repository push-pull
are not blocked and always available, according to my experience.

.SH  Is it okay to blog on GitHub Pages?

GitHub is mainly designed to host code repositories, so I decided to
check twice whether we could blog in GitHub Pages.

Answer: 'You can use GitHub Pages to showcase some open source projects,
host a blog, or even share your resume.' This is mentioned in
Quickstart for GitHub Pages:
.RS
.P
.Text https://docs.github.com/en/pages/quickstart
.RE
.
.
.P

So yes, we could use GitHub Pages as blog. That is great - especially
considering the fact that for some reason - probably due to the
national firewall - I could not connect to neither Blogspot nor
Wordpress.


.SH  PLAIN-TEXT BLOGGING?

Maybe we could blog in plaintext only? - that is, providing pages
as a big `pre` HTML tag.

No. This might be okay for users who prefer plain text like me,
but it would probably look extremely weird for most people. People
would feel that maybe it's something wrong with my blog page,
since it 'looks different from other websites/blogs'.

I decided to use Jekyll for now. I have used Jekyll for one of my
previous blogs, and it's good enough - there is space for
improvement for everything, though.

Wait - we could probably fuse Jekyll with

.SH REASONS TO BLOG

But why should we write blogs? There are several compelling reasons.

Firstly, for fun. Blogging offers a source of enjoyment. It provides
an outlet for self-expression, allowing us to explore our creativity,
share our passions, and engage with topics that bring us joy. Whether
it's writing about our hobbies, travel experiences, or personal
musings, the process of crafting a blog post can be a fulfilling and
entertaining activity in itself.

Secondly, blogging serves as a powerful means of communication. By
sharing our thoughts, ideas and experiences, we give others a window
into our world, enabling them to know and understand us on a deeper
level. This increased transparency can foster stronger connections
with our readers, build trust, and open new opportunites. It could
lead to professional collaborations, new friendships, or a wider
network of like-minded individuals who share our interests and values.

What's more, I myself have benefited a lot from the blogs written
by other people - from the beginning - when I firstly studied DOS
commands and C coding. By writing blogs myself, maybe I would help
other people - that's great, isn't it? Helping other people should
be great.

Also: practice English writing. We often talk about 'practice writing',
but I found that the important part is editing. Editing. Many edits.

I write in English, so I could practice English writing. But I guess
it's not very much about the language. Writing might be a universal,
language-independent skill, which does not confine to one certain language.

It occured to me that when I wrote blogs before, I don't know how to
manage the size of one article. The result is that, I wrote lots of
really tiny 'articles' - or, should we use the term 'snippet'? - no,
'snippet' is even longer - maybe 'cards' should be the right word.

What I also did before is to edit Markdown texts in-line - in every line -
which produces git-diff results that are more difficult to read. This time
I find it great to minimise the git-diff results - since, anyway, the
target view would be the brew'd HTML, not the Markdown source text.

.SH JEKYLL

The posts are put in the `_posts` directory. They would automatically
update if we use `jekyll serve`, which launches a web server and
auto-regenerates the site when a file is updated.

`--livereload` is a really convenient feature which tells the browser to
refresh the page every time we have made an edit. With this option
specified, we won't need to refresh the page ourselves.

Jekyll requires blog post files to be named according to the following
format:

      `YEAR-MONTH-DAY-title.MARKUP`

Where `YEAR` is a four-digit number, `MONTH` and `DAY` are both
two-digit numbers, and `MARKUP` is the file extension representing
the format used in the file.
 
It would be easier to just grab a existing source and take a look at the
format.

Code snippets syntax:

      {% highlight ruby %}
      def print_hi(name)
         puts "Hi, #{name}"
      end
      print_hi('Tom')
      #=> prints 'Hi, Tom' to STDOUT.
      {% endhighlight %}

Jekyll docs:

      https://jekyllrb.com/docs/home
   
All bugs/feature requests shall be uploaded to
Jekyllâ€™s GitHub repo:

      https://github.com/jekyll/jekyll

Questions can be asked on Jekyll Talk:

      https://talk.jekyllrb.com/

.SH  PLAIN-TEXT

Some reasons to use plain-text can be found in the book
TAOUP - The Art of Unix Programming, as well as the use-plain-text-email
website:

      useplaintext.email

The use-plain-text-email site gives some really interesting points, but
those points are mainly for the context of e-mail:

1. 72-column text for easier quoting.

2. Phishing, marketing and spam e-mails use HTML. Plain-text emails can be
distinguished between them.

3. HTML is an extensive standard, and its implementation often
gives rise to numerours vulnerabilities.
What's more, the vast array of features that HTML encompasses is
largely superfluous when it comes to the purpose of
email.

4. HTML e-mail can contain hidden tracking stuff.

5. HTML is less accessible, unless accessible is considered when writing.

6. Some people use e-mail clients that support *only* plain-text e-mails.

But I think there is one important reason behind. The typewriter tradition
of the western society.

.SH  PLAIN-TEXT BLOGGING

The term plain-text is somewhat chaotic.

At the very beginning there
are the typewriters, which usually only prints out mono-colour letters
and symbols. Typewriters support cursor movement, and therefore allowing
using the underscore and hyphen symbols to print out underline and
delete lines.

Today's software terminal emulators offer underlining, but
strikethrough is not the same way widely supported. Many terminal
emulators adhere to the VT-100 'standard', which, in addition to underlining,
offers support for a number of colour, bold and italic formatting.
Consequently, man pages
make heavy use of underlined and bold text, and many distributions enable
the coloured output of the ls(1) program by default, along with numerous
other command-line software.

An intriguing development is that some
people propose a yet another new standard that restricts colour
output based on the NO_COLOR environment variable. Take a look at
these two links:

        no-color.org
        github.com/jcs/no_color

I typeset my blog with groff(1), the very same tool employed for
processing the
man-pages(7). This choice then prompts a series of questions: Should I
incorporate underlined and bold text, mirroring the formatting
commonly seen in man-pages(7)?
What about italic?

No, I won't use these in my blog.

The rational behind
this decision stems from my desire to ensure that
my blog remains fully accessible and legible across a diverse range
of plain-text
environments. For instance, the in-browser source-view
feature on GitHub lacks
support to underlined, italic and bold text.

Additionally, I suspect
that some users may
have disabled such formatting options in their terminals, perhaps
due to personal preference.
Moreover, it's entirely possible that some
people are still using 'dumb terminals', which typically lacks support
for advanced text formatting.

By avoiding these formatting
elements, I aim to create a blog that can be seamlessly viewed and
understood by as wide an audience as possible, regardless of the specific
viewing environment they use.

The e-mail environment is also taken into consideration. Usually the
plain-text email doesn't include underline/italic/bold.

80x24 'ANSI' screen?

.SH  RADIO

I love radio. This might sound weird, as today we have Internet, but
I would say that radio has its advantage - analog signal. I feel that
analog signal carries a sound of higher-quality than digital signal
- at least, a different feeling. What's more, analog signal is really
good for live/stream, since that even if there are distractions,
sound transmitted with analog signal would still preserve some of its
contents, while in the case of the digital signal packet loss usually
leads to simply vanity.

Sometimes, while I am doing other thing, I come up with the feeling of 
turning on the radio. Then I do. But very soon later, I feel distracted
by the radio, and then feel like turning off the radio. It's like a
loop. I don't feel good about this. My current solution is simply not
to turn on the radio in the very beginning - since I would, according to
experience, feel like turning it off in the end.

.SH  LINKS

itsfoss.com/cool-retro-term/
.br
www.tldp.org
.br
lfs
.br
slashdot.org
.br
www.lwn.net Linux Weekly News
.br
slackbuilds.org
.br
sudoscience.blog
.br
primis.tech: 'DO VIDEO BETTER
.br
	 - Keep users watching to better monetize websites'
.br
fastcomments.com
.br
c-faq.com
.br
www.faqs.org - Internet FAQ Archives
.br
www.readabstracts.com - provide abstracts of papers
.br
blog.ploeh.dk - The 80/24 rule by Mark Seemann
.br
exple.tive.org/blarg/2019/10/23/80x25/
.br
vt100.net

.SH  STUFF

Common Desktop Environment, CDE
.br
mapscii
.br
APL - A Programming Language
.br
mob programming
.br
Pareto principle - 80/20
.br
wetty
.br
xterm.js
.br
rfc1855 - email communication etiquette

.SH  FORTUNE(6) QUOTES


A highly intelligent man should take a primitive woman.
Imagine if on top of everything else, I had a woman who
interfered with my work.
.rj
	-- Adolf Hitler

James Joyce -- an essentially private man who wished his total
indifference to public notice to be universally recognised.
.rj
	-- Tom Stoppard

Air Force Inertia Axiom:
.br
        Consistency is always easier to defend than correctness.

Air is water with holes in it.

Air pollution is really making us pay through the nose.

Airplanes are interesting toys but of no military value.
.rj
	-- Marechal Ferdinand Foch, Professor of Strategy,
.rj
	   Ecole Superieure de Guerre

Al didn't smile for forty years.  You've got to admire a man like that.
.rj
		-- from "Mary Hartman, Mary Hartman"
   
Alan Turing thought about criteria to settle the question of whether
machines can think, a question of which we now know that it is about
as relevant as the question of whether submarines can swim.
.rj
		-- Edsger W. Dijkstra

Alas, I am dying beyond my means.
.rj
		-- Oscar Wilde [as he sipped champagne on his deathbed]

ALASKA:
.br
	A prelude to "No."

Albert Camus wrote that the only serious question is whether to
kill yourself or not. Tom Robbins wrote that the only serious
question is whether time has a beginning and an end. Camus clearly
got up on the wrong side of bed, and Robbins must have forgotten
to set the alarm.
.rj
		-- Tom Robbins

SCORPIO (Oct 23 - Nov 21)
.br
	You are shrewd in business and cannot be trusted.  You will
	achieve the pinnacle of success because of your total lack of
	ethics.  Most Scorpio people are murdered.

Sometimes love ain't nothing but a misunderstanding between two fools.
   
The New York Times is read by the people who run the country.  The
Washington Post is read by the people who think they run the country.
The National Enquirer is read by the people who think Elvis is alive
and running the country ...
    -- Robert J. Woodhead

The nice thing about standards is that there are so many of them to
choose from.
    -- Andrew S. Tanenbaum

The number of arguments is unimportant unless some of them are
correct.
    -- Ralph Hartley

.ll 80
=======================================================================
.br
||                                                                   ||
.br
|| The FORTUNE-COOKIE program is soon to be a Major Motion Picture!  ||
.br
||         Watch for it at a theater near you next summer!           ||
.br
||                                                                   ||
.br
=======================================================================
.br
Francis Ford Coppola presents a George Lucas Production:
.br
	"Fortune Cookie"
.br
Directed by Steven Spielberg.
.br
Starring  Harrison Ford  Bette Midler  Marlon Brando
.br
      Christopher Reeves  Marilyn Chambers
.br
      and Bob Hope as "The Waiter".
.br
Costumes Designed by Pierre Cardin.
.br
Special Effects by Timothy Leary.
.br
Read the Warner paperback!
.br
Invoke the Unix program!
.br
Soundtrack on XTC Records.
.br
In 70mm and Dolby Stereo at selected theaters and terminal
.br
    centers.
.ll

--------------------------------------------------------------------

		    PLAYGIRL, Inc.
.br
		    Philadelphia, Pa.  19369
.br
Dear Sir:
.br
Your name has been submitted to us with your photo.  I regret to
inform you that we will be unable to use your body in our centerfold.  On
a scale of one to ten, your body was rated a minus two by a panel of women
ranging in age from 60 to 75 years.  We tried to assemble a panel in the
age bracket of 25 to 35 years, but we could not get them to stop laughing
long enough to reach a decision.  Should the taste of the American woman
ever change so drastically that bodies such as yours would be appropriate
in our magazine, you will be notified by this office.  Please, don't call
us.

Sympathetically,
.br
Amanda L. Smith

p.s.	We also want to commend you for your unusual pose.  Were you
wounded in the war, or do you ride your bike a lot?

ASCII_ART_HERE


	    FROM THE DESK OF
.br
	    Dorothy Gale

Auntie Em:
.br
    Hate you.
.br
    Hate Kansas.
.br
    Taking the dog.
.br
	Dorothy

Before borrowing money from a friend, decide which you need more.
.br
    -- Addison H. Hallock


Don't marry for money; you can borrow it cheaper.
    -- Scottish Proverb

Don't mind him; politicians always sound like that.

Friends, n:
.br
1. People who borrow your books and set wet glasses on them.
.br
2. People who know you well, but like you anyway.

Swipple's Rule of Order:
.br
	He who shouts the loudest has the floor.

Syntactic sugar causes cancer of the semicolon.
.br
		-- Epigrams in Programming, ACM SIGPLAN Sept. 1982

Systems have sub-systems and sub-systems have sub-systems and so on ad
infinitum -- which is why we're always starting over.
.br
		-- Epigrams in Programming, ACM SIGPLAN Sept. 1982

ASCII_ART2

Every now and then when your life gets complicated and the weasels
start closing in, the only cure is to load up on heinous chemicals and
then drive like a bastard from Hollywood to Las Vegas ... with the
music at top volume and at least a pint of ether.
.br
		-- H. S. Thompson, "Fear and Loathing in Las Vegas"


T:	One big monster, he called TROLL.
.br
	He don't rock, and he don't roll;
.br
	Drink no wine, and smoke no stogies.
.br
	He just Love To Eat Them Roguies.
.br
		-- The Roguelet's ABC

SYSTEM-INDEPENDENT:
.br
	Works equally poorly on all systems.

Systems programmer:
.br
	A person in sandals who has been in the elevator with the senior
vice president and is ultimately responsible for a phone call you
are to receive from your boss.

Systems programmers are the high priests of a low cult.
.br
		-- R.S. Barton
.SH INTERPRETED/SCRIPTING LANGUAGES

Interpreted/scripting languages are good in the way that there is no
compilation - and therefore, no compile-time errors! Wow. Only run-time
errors.

What's more, there are no extra generated files to worry about.
Just the source files.
.SH ROFF(7)/GROFF(1)/TROFF?

At first this blog is written directly in HTML. After some edits I
found it really tiring to redo the typesetting whenever I make some
edits - the line lengths would change, so if I am to edit one line,
I would in the end edit multiple lines to adjust the typesetting,
sometimes even the whole paragraph. So I turned to groff(1), and it
works great!

The roff(7) text formatting language syntax is really clear and easy to use.
I just grab a roff file from /usr/share/man/ - it was
/usr/share/man/man1/bzip2.1 - and I got my hands on. There are really
not much commands, just SS, SH and TH for the title stuff.

The only problem is that groff(1) generates output for the terminal,
so I need to sed(1) out the terminal escape sequences.

Now I just need to edit the roff(7) source and `make`. The output HTML
is also maintained by git(1), and it's really pleasant seeing
the git-diff updates automatically generated by groff(1). It beautiful.
Clear, neat and beautiful. And it doesn't hurt anything - if I were to
continue editing the HTML by hand as before, that would be the same
scene, with the only difference that the git-diff updates are typeset
by my hands, instead of automatically by groff(1).

groff(7) randomly resets the typesetting even for paragraphs that I
haven't touched. An AI told me that I can use the '.na' command to
disable justification in order to fix this. Let's see if it works ...

.SH GROFF(7) NOTES

The family of the roff type-setting system:

groff = GNU roff

troff: the *roff language* was historically called *troff*.

Texinfo:

nroff:

.Text '.P'

.Text '.I xxx' - italic

.Text '.' - a line consisting of a dot only, an 'empty roff(1)
request':

	'To additionally use the auto-fill mode in Emacs,
it is best to insert an
empty roff(1) request, a line consisting of a dot only, after each
sentence.'

	So this is only for triggering some auto-fill feature of Emacs,
and seemingly does not have any function in the means of typesetting.
Just like a line of comment.
Since I don't use Emacs, I should be able to simply ignore this command.

.Text '.BR' - bold text?

Macro definition: '.de [macro]', then use '..' to end.

nop: '.nop [anything]' - always process [anything]

.Text Tabbed/indent example code snippet:

.SH KAKAOTALK

The registration requires the user to send an SMS, instead of receiving an
SMS from them.

.SH PROTON MAIL

Proton Mail also comes with a VPN. The limit of the free plan is
one connection.

IMAP/SMTP: included with Mail Plus, Proton Unlimited and Proton for Business.
Need to upgrade.

That is, there is no access to IMAP/SMTP or something similar for the free
plan users. Got to upgrade if we would like to use Proton Mail in other
email clients. Anyway we could download its own email client.

.SH APPS

Proton VPN - haven't tried but I guess it works.

Proton Mail - for free plan, this is the only email client supporting
Proton Mail accounts.

.SH AUTHOR
Huihang Yan, huihang.yan@outlook.com.

https://github.com/huihang-yan

Typesetting by groff(1):
.br
	GNU groff version 1.22.4
.br
	Copyright (C) 2018 Free Software Foundation, Inc.
.br
	GNU groff comes with ABSOLUTELY NO WARRANTY.
.br
	You may redistribute copies of groff and its subprograms
.br
	under the terms of the GNU General Public License.
.br
	For more information about these matters, see the file
.br
	named COPYING.

	called subprograms:

	GNU grops (groff) version 1.22.4
.br
	GNU troff (groff) version 1.22.4



